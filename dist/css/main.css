/* Base */
/* Minimal singular family, multiple weights setup */
/* Minimal reset that keeps insepector output clean */
/* stylelint-disable selector-no-universal, selector-no-type */
*,
*::before,
*::after {
  border: 0;
  box-shadow: 0 0 0;
  box-sizing: inherit;
  font-family: Helvetica, sans-serif;
  font-feature-settings: "kern" 1;
  font-kerning: normal;
  -webkit-font-smoothing: antialiased;
  list-style: none;
  margin: 0;
  padding: 0;
  text-rendering: optimizeLegibility;
}
/* stylelint-enable */
/* Only non-named-colour palette, z-index and font-stacks */
:root {

  /* z-index */
}
/* Common breakpoints. However adaptions can happen at component-level */
/* Components */
/** @define Embed */
/**
 * For use with media embeds – such as videos, slideshows, or images –
 * that need to retain a specific aspect ratio but adapt to the width of their
 * containing element. It also mitigates repainting when media embeds load.
 *
 * Default is 1:1 (square).
 *
 * Based on: http://alistapart.com/article/creating-intrinsic-ratios-for-video
 */
.Embed {
  display: block;
  overflow: hidden;
  position: relative
}
.Embed::before {
  content: "";
  display: block;
  padding-bottom: 100%;
  width: 100%;
}
.Embed-item {
  border: none;
  bottom: 0;
  height: 100%;
  left: 0;
  max-width: 100%;
  position: absolute;
  top: 0;
  width: 100%

  /* stylelint-disable plugin/selector-bem-pattern, selector-no-type, selector-no-universal */
}
.Embed-item * {
  height: 100%;
  width: 100%;
}
.Embed-item img {
  height: auto;
  width: 100%;
}
/**
 * Modifier: 16:9 aspect ratio
 */
.Embed--16by9 {
}
.Embed--16by9::before {
  padding-bottom: 56.25%;
}
/**
 * Modifier: 3:2 aspect ratio
 *
 * Homepage video
 */
.Embed--3by2 {
}
.Embed--3by2::before {
  padding-bottom: 66.66%;
}
/**
 * Modifier: 2:1 aspect ratio
 *
 */
.Embed--2by1 {
}
.Embed--2by1::before {
  padding-bottom: 50%;
}
/** @define Footer */
.Footer {
  position: relative;
}
/**
 * Viewport: medium
 */
@media (min-width: 600px) {}
/**
 * Viewport: large
 */
@media (min-width: 860px) {}
/** @define Header */
.Header {}
@media (min-width: 600px) {}
@media (min-width: 860px) {}
/** @define Media */
.Media-caption {}
/**
 * Modifier: landscape
 *
 * Displays caption inline with media
 * on larger breakpoints
 */
.Media--landscape {}
@media (min-width: 600px) {}
/** @define Navigation */
.Navigation {}
.Navigation-burger {
  background: url("data:image/svg+xml;charset=utf-8,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 42 35'%3E %3Cg%3E %3Crect fill='%23000000' width='42' height='5'/%3E %3Crect y='15' fill='%23000000' width='34' height='5'/%3E %3Crect y='30' fill='%23000000' width='42' height='5'/%3E %3C/g%3E %3C/svg%3E") no-repeat center center;
  background-size: 21px 17px;
  border: 0;
  height: 17px;
  left: 20px;
  overflow: hidden;
  position: absolute;
  text-decoration: none;
  text-indent: 100%;
  top: -38px;
  -webkit-transform: scale(0.9);
          transform: scale(0.9);
  white-space: nowrap;
  width: 21px;
}
@media (min-width: 600px) {}
/** @define Page */
.Page {}
.Page-inner {}
.Page-nav {}
.Page-header {}
.Page-content {}
@media (min-width: 600px) {}
@media (min-width: 860px) {}
/* Third Party */
/* @import "third-party/animsition/animsition.min.css"; */
